<MudCard title="Just click on me to flip card" Class="card" @onclick="ToggleCard">
    <MudCardContent style="display: flex; justify-content: center; align-items: center; text-align: center; height: 100%;">
        <p>@(IsFrontVisible ? Front : Reverse)</p>
    </MudCardContent>
</MudCard>

@code {
    [Parameter] public string Front { get; set; }
    [Parameter] public string Reverse { get; set; }
    [Parameter] public bool IsFrontVisible { get; set; }
    [Parameter] public EventCallback<bool> IsFrontVisibleChanged { get; set; }
    [Parameter] public EventCallback OnReveal { get; set; }

    private async Task ToggleCard()
    {
        var newValue = !IsFrontVisible;
        await IsFrontVisibleChanged.InvokeAsync(newValue);

        if (!newValue)
        {
            await OnReveal.InvokeAsync();
        }
    }
}

<style>
    p {
        -webkit-touch-callout: none;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }

    .card {
        height: 70%;
        word-break: break-all;
    }
</style>
